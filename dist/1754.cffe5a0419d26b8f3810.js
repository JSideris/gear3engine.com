/*! For license information please see 1754.cffe5a0419d26b8f3810.js.LICENSE.txt */
"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[1754],{413:(e,i,a)=>{var n=a(3663);n.DisplayObject.prototype.name=null,n.Container.prototype.getChildByName=function(e,i){for(var a=0,n=this.children.length;a<n;a++)if(this.children[a].name===e)return this.children[a];if(i)for(a=0,n=this.children.length;a<n;a++)if(this.children[a].getChildByName){var r=this.children[a].getChildByName(e,!0);if(r)return r}return null}},2661:(e,i,a)=>{var n=a(3663),r=a(932);n.DisplayObject.prototype.getGlobalPosition=function(e,i){return void 0===e&&(e=new r.Point),void 0===i&&(i=!1),this.parent?this.parent.toGlobal(this.position,e,i):(e.x=this.position.x,e.y=this.position.y),e}},6677:(e,i,a)=>{var n=a(4625),r=a(5382);function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var o=t(n),l=t(r);if("undefined"==typeof globalThis&&("undefined"!=typeof self?self.globalThis=self:void 0!==a.g&&(a.g.globalThis=a.g)),globalThis.Promise||(globalThis.Promise=o.default),Object.assign||(Object.assign=l.default),Date.now&&Date.prototype.getTime||(Date.now=function(){return(new Date).getTime()}),!globalThis.performance||!globalThis.performance.now){var s=Date.now();globalThis.performance||(globalThis.performance={}),globalThis.performance.now=function(){return Date.now()-s}}for(var h=Date.now(),g=["ms","moz","webkit","o"],b=0;b<g.length&&!globalThis.requestAnimationFrame;++b){var f=g[b];globalThis.requestAnimationFrame=globalThis[f+"RequestAnimationFrame"],globalThis.cancelAnimationFrame=globalThis[f+"CancelAnimationFrame"]||globalThis[f+"CancelRequestAnimationFrame"]}globalThis.requestAnimationFrame||(globalThis.requestAnimationFrame=function(e){if("function"!=typeof e)throw new TypeError(e+"is not a function");var i=Date.now(),a=16+h-i;return a<0&&(a=0),h=i,globalThis.self.setTimeout((function(){h=Date.now(),e(performance.now())}),a)}),globalThis.cancelAnimationFrame||(globalThis.cancelAnimationFrame=function(e){return clearTimeout(e)}),Math.sign||(Math.sign=function(e){return 0===(e=Number(e))||isNaN(e)?e:e>0?1:-1}),Number.isInteger||(Number.isInteger=function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}),globalThis.ArrayBuffer||(globalThis.ArrayBuffer=Array),globalThis.Float32Array||(globalThis.Float32Array=Array),globalThis.Uint32Array||(globalThis.Uint32Array=Array),globalThis.Uint16Array||(globalThis.Uint16Array=Array),globalThis.Uint8Array||(globalThis.Uint8Array=Array),globalThis.Int32Array||(globalThis.Int32Array=Array)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,