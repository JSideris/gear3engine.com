/*! For license information please see 5868.fd39b4726d597b19ab19.js.LICENSE.txt */
"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[5868],{5868:(E,_)=>{var T,N,R,A,I,S,O,L,P,U,D,M,G,C,B,F,H,Y,V;Object.defineProperty(_,"__esModule",{value:!0}),_.ENV=void 0,(T=_.ENV||(_.ENV={}))[T.WEBGL_LEGACY=0]="WEBGL_LEGACY",T[T.WEBGL=1]="WEBGL",T[T.WEBGL2=2]="WEBGL2",_.RENDERER_TYPE=void 0,(N=_.RENDERER_TYPE||(_.RENDERER_TYPE={}))[N.UNKNOWN=0]="UNKNOWN",N[N.WEBGL=1]="WEBGL",N[N.CANVAS=2]="CANVAS",_.BUFFER_BITS=void 0,(R=_.BUFFER_BITS||(_.BUFFER_BITS={}))[R.COLOR=16384]="COLOR",R[R.DEPTH=256]="DEPTH",R[R.STENCIL=1024]="STENCIL",_.BLEND_MODES=void 0,(A=_.BLEND_MODES||(_.BLEND_MODES={}))[A.NORMAL=0]="NORMAL",A[A.ADD=1]="ADD",A[A.MULTIPLY=2]="MULTIPLY",A[A.SCREEN=3]="SCREEN",A[A.OVERLAY=4]="OVERLAY",A[A.DARKEN=5]="DARKEN",A[A.LIGHTEN=6]="LIGHTEN",A[A.COLOR_DODGE=7]="COLOR_DODGE",A[A.COLOR_BURN=8]="COLOR_BURN",A[A.HARD_LIGHT=9]="HARD_LIGHT",A[A.SOFT_LIGHT=10]="SOFT_LIGHT",A[A.DIFFERENCE=11]="DIFFERENCE",A[A.EXCLUSION=12]="EXCLUSION",A[A.HUE=13]="HUE",A[A.SATURATION=14]="SATURATION",A[A.COLOR=15]="COLOR",A[A.LUMINOSITY=16]="LUMINOSITY",A[A.NORMAL_NPM=17]="NORMAL_NPM",A[A.ADD_NPM=18]="ADD_NPM",A[A.SCREEN_NPM=19]="SCREEN_NPM",A[A.NONE=20]="NONE",A[A.SRC_OVER=0]="SRC_OVER",A[A.SRC_IN=21]="SRC_IN",A[A.SRC_OUT=22]="SRC_OUT",A[A.SRC_ATOP=23]="SRC_ATOP",A[A.DST_OVER=24]="DST_OVER",A[A.DST_IN=25]="DST_IN",A[A.DST_OUT=26]="DST_OUT",A[A.DST_ATOP=27]="DST_ATOP",A[A.ERASE=26]="ERASE",A[A.SUBTRACT=28]="SUBTRACT",A[A.XOR=29]="XOR",_.DRAW_MODES=void 0,(I=_.DRAW_MODES||(_.DRAW_MODES={}))[I.POINTS=0]="POINTS",I[I.LINES=1]="LINES",I[I.LINE_LOOP=2]="LINE_LOOP",I[I.LINE_STRIP=3]="LINE_STRIP",I[I.TRIANGLES=4]="TRIANGLES",I[I.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",I[I.TRIANGLE_FAN=6]="TRIANGLE_FAN",_.FORMATS=void 0,(S=_.FORMATS||(_.FORMATS={}))[S.RGBA=6408]="RGBA",S[S.RGB=6407]="RGB",S[S.RG=33319]="RG",S[S.RED=6403]="RED",S[S.RGBA_INTEGER=36249]="RGBA_INTEGER",S[S.RGB_INTEGER=36248]="RGB_INTEGER",S[S.RG_INTEGER=33320]="RG_INTEGER",S[S.RED_INTEGER=36244]="RED_INTEGER",S[S.ALPHA=6406]="ALPHA",S[S.LUMINANCE=6409]="LUMINANCE",S[S.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",S[S.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",S[S.DEPTH_STENCIL=34041]="DEPTH_STENCIL",_.TARGETS=void 0,(O=_.TARGETS||(_.TARGETS={}))[O.TEXTURE_2D=3553]="TEXTURE_2D",O[O.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",O[O.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY",O[O.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",O[O.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",O[O.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",O[O.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",O[O.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",O[O.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",_.TYPES=void 0,(L=_.TYPES||(_.TYPES={}))[L.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",L[L.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",L[L.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",L[L.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",L[L.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",L[L.UNSIGNED_INT=5125]="UNSIGNED_INT",L[L.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",L[L.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",L[L.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",L[L.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",L[L.BYTE=5120]="BYTE",L[L.SHORT=5122]="SHORT",L[L.INT=5124]="INT",L[L.FLOAT=5126]="FLOAT",L[L.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV",L[L.HALF_FLOAT=36193]="HALF_FLOAT",_.SAMPLER_TYPES=void 0,(P=_.SAMPLER_TYPES||(_.SAMPLER_TYPES={}))[P.FLOAT=0]="FLOAT",P[P.INT=1]="INT",P[P.UINT=2]="UINT",_.SCALE_MODES=void 0,(U=_.SCALE_MODES||(_.SCALE_MODES={}))[U.NEAREST=0]="NEAREST",U[U.LINEAR=1]="LINEAR",_.WRAP_MODES=void 0,(D=_.WRAP_MODES||(_.WRAP_MODES={}))[D.CLAMP=33071]="CLAMP",D[D.REPEAT=10497]="REPEAT",D[D.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT",_.MIPMAP_MODES=void 0,(M=_.MIPMAP_MODES||(_.MIPMAP_MODES={}))[M.OFF=0]="OFF",M[M.POW2=1]="POW2",M[M.ON=2]="ON",M[M.ON_MANUAL=3]="ON_MANUAL",_.ALPHA_MODES=void 0,(G=_.ALPHA_MODES||(_.ALPHA_MODES={}))[G.NPM=0]="NPM",G[G.UNPACK=1]="UNPACK",G[G.PMA=2]="PMA",G[G.NO_PREMULTIPLIED_ALPHA=0]="NO_PREMULTIPLIED_ALPHA",G[G.PREMULTIPLY_ON_UPLOAD=1]="PREMULTIPLY_ON_UPLOAD",G[G.PREMULTIPLY_ALPHA=2]="PREMULTIPLY_ALPHA",G[G.PREMULTIPLIED_ALPHA=2]="PREMULTIPLIED_ALPHA",_.CLEAR_MODES=void 0,(C=_.CLEAR_MODES||(_.CLEAR_MODES={}))[C.NO=0]="NO",C[C.YES=1]="YES",C[C.AUTO=2]="AUTO",C[C.BLEND=0]="BLEND",C[C.CLEAR=1]="CLEAR",C[C.BLIT=2]="BLIT",_.GC_MODES=void 0,(B=_.GC_MODES||(_.GC_MODES={}))[B.AUTO=0]="AUTO",B[B.MANUAL=1]="MANUAL",_.PRECISION=void 0,(F=_.PRECISION||(_.PRECISION={})).LOW="lowp",F.MEDIUM="mediump",F.HIGH="highp",_.MASK_TYPES=void 0,(H=_.MASK_TYPES||(_.MASK_TYPES={}))[H.NONE=0]="NONE",H[H.SCISSOR=1]="SCISSOR",H[H.STENCIL=2]="STENCIL",H[H.SPRITE=3]="SPRITE",_.MSAA_QUALITY=void 0,(Y=_.MSAA_QUALITY||(_.MSAA_QUALITY={}))[Y.NONE=0]="NONE",Y[Y.LOW=2]="LOW",Y[Y.MEDIUM=4]="MEDIUM",Y[Y.HIGH=8]="HIGH",_.BUFFER_TYPE=void 0,(V=_.BUFFER_TYPE||(_.BUFFER_TYPE={}))[V.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",V[V.ARRAY_BUFFER=34962]="ARRAY_BUFFER",V[V.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER"}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,