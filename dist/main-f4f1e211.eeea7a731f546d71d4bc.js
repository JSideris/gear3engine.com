"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[8225],{7303:function(t,e,s){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.controllable=void 0;const r=i(s(5745)),n=i(s(8989));e.controllable=function(t){return class extends t{constructor(...t){super(...t),this.addDiscriminator("controllable"),this.virtualInput=this.gi.makeOnMaster(r.default,(t=>{t._remoteRobotId=this.id,t.robot=this}))}faceMouse(t,e){}faceObject(t,e){}fixedUpdate(t,e){super.fixedUpdate&&super.fixedUpdate(t,e)}destroy(t){this.virtualInput&&this.gi.destroyObjectOnMaster(this.virtualInput,n.default.OutOfScope)}}}},7187:function(t,e,s){var i=this&&this.__decorate||function(t,e,s,i){var r,n=arguments.length,o=n<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,s,i);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(o=(n<3?r(o):n>3?r(e,s,o):r(e,s))||o);return n>3&&o&&Object.defineProperty(e,s,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const o=n(s(2136)),a=s(3133),h=s(1327),u=n(s(9560));let c=class extends o.default{get controlsDisabled(){return!(!this.robot||!this.robot.alive||this.robot.is("living")&&this.robot.crippled)}constructor(){super(),this.robot=null,this.loadedObjects={},this.username=this.username??"",this.targetVantageScale=this.targetVantageScale??1,this.vantageScale=this.vantageScale??1}setRobot(t){this.robot&&u.default.error.write(`Attempt to spawn in a robot for a controller that already has a robot - ${this.username} #${this.id}.`),this.robot=t,this.robot.owner=this,this.loadObject(t)}abandonRobot(){this.robot&&(this.robot.owner=null,this.unloadObject(this.robot),this.robot=null)}loadObject(t){if(this.loadedObjects[t.id]){let e=this.loadedObjects[t.id].c+1;return this.loadedObjects[t.id].c=e,e}return this.loadedObjects[t.id]={o:t,c:1},t.loadedByUsers[this.id]&&u.default.warn.write(`Bad state: Object ${t._constructor.name}#${t.id} thought it was already loaded by ${this.username}#${this.id}.`),t.loadedByUsers[this.id]=this,this.gi.trigger("initialObjectLoad",this,t),t._group&&t._group.watch(this),1}unloadObject(t){if(this.loadedObjects[t.id]){let e=this.loadedObjects[t.id].c-1;return this.loadedObjects[t.id].c=e,e?(u.default.info.write(`- Decreasing load level of ${t._constructor.name}#${t.id} for ${this.username}#${this.id} to ${e}.`),t._group&&!t._group.shouldStillWatch(this)&&t._group.unwatch(this)):(delete this.loadedObjects[t.id],t.loadedByUsers[this.id]||u.default.warn.write(`Bad state: Object ${t._constructor.name}#${t.id} thought it was already was not loaded by ${this.username}#${this.id}.`),delete t.loadedByUsers[this.id],this.gi.trigger("finalObjectUnload",this,t)),e}}destroy(t){this.abandonRobot()}};c=i([h.teamable,a.ownable,r("design:paramtypes",[])],c),e.default=c},3133:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ownable=void 0,e.ownable=function(t){return class extends t{get ownerId(){return this.owner?.id}set ownerId(t){this.owner=this.gi.allGameObjectsById[t]}constructor(...t){super(...t),this.addDiscriminator("ownable")}}}},5745:function(t,e,s){var i=this&&this.__decorate||function(t,e,s,i){var r,n=arguments.length,o=n<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,s,i);else for(var a=t.length-1;a>=0;a--)(r=t[a])&&(o=(n<3?r(o):n>3?r(e,s,o):r(e,s))||o);return n>3&&o&&Object.defineProperty(e,s,o),o},r=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},n=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.VirtualInputMomentary=e.VirtualInputButton=e.VirtualInputAxis=void 0;const o=n(s(7260)),a=n(s(6610)),h=s(3780),u=n(s(2453)),c=n(s(2136));class l{constructor(t){this.input=t}}class d extends l{constructor(t){super(t)}set(t){}}e.VirtualInputAxis=d;class b extends l{constructor(t,e){super(t),this.flagIndex=e}press(){this.input._pressButton(this.flagIndex)}release(){this.input._releaseButton(this.flagIndex)}get value(){return this.input.useLocal?this.input._rawButtonsLocal>>this.flagIndex&1:this.input._rawButtons>>this.flagIndex&1}}e.VirtualInputButton=b,e.VirtualInputMomentary=class extends l{constructor(t,e){super(t),this.flagIndex=e}press(){this.input._pressMomentary(this.flagIndex)}get value(){return this.input.useLocal?this.input._rawMomentariesLocal>>this.flagIndex&1:this.input._rawMomentaries>>this.flagIndex&1}};let p=class extends c.default{constructor(){super(),this.x1=new d(this),this.y1=new d(this),this.x2=new d(this),this.y2=new d(this),this.ax1=new d(this),this.ax2=new d(this),this.ax3=new d(this),this.ax4=new d(this),this.ax5=new d(this),this.ax6=new d(this),this.ax7=new d(this),this.ax8=new d(this),this.ax9=new d(this),this.up=new b(this,0),this.down=new b(this,1),this.left=new b(this,2),this.right=new b(this,3),this.bL=new b(this,4),this.bR=new b(this,5),this.start=new b(this,6),this.select=new b(this,7),this.primary=new b(this,8),this.secondary=new b(this,9),this.tertiary=new b(this,10),this.next=new b(this,11),this.previous=new b(this,12),this.b1=new b(this,13),this.b2=new b(this,14),this.b3=new b(this,15),this.b4=new b(this,16),this.b5=new b(this,17),this.b6=new b(this,18),this.b7=new b(this,19),this.b8=new b(this,22),this.b9=new b(this,21),this.back=new b(this,0),this.exit=new b(this,1),this.m1=new b(this,2),this.m2=new b(this,3),this.m3=new b(this,4),this.m4=new b(this,5),this.m5=new b(this,6),this.m6=new b(this,7),this.m7=new b(this,8),this.m8=new b(this,9),this.m9=new b(this,10),this.useLocal=this.useLocal??!1,this._rawButtonsLocal=this._rawButtons=this._rawButtons??0,this._rawMomentariesLocal=this._rawMomentaries=this._rawMomentaries??0,this.mouseXLocalCache=this.mouseXLocal=this.mouseX=this.mouseX??0,this.mouseYLocalCache=this.mouseYLocal=this.mouseY=this.mouseY??0}initialize(){this.robot||(this.robot=this.gi.remoteGameObjectsById[this._remoteRobotId]),this.robot?(this.robot.virtualInput=this,c.default.addReference(this,this.robot)):console.warn("A robot was unloaded before virtual inputs could be bound. This could be a coincidence, or a bug.")}_pressButton(t){this._rawButtonsLocal=this._rawButtons|=1<<t}_releaseButton(t){this._rawButtonsLocal=this._rawButtons&=~(1<<t)}_pressMomentary(t){this._rawMomentariesLocal=this._rawMomentaries|=1<<t}_setMouse(t,e){this.mouseX=t,this.mouseY=e}setMouse(t,e){this.mouseX=this.mouseXLocal=t,this.mouseY=this.mouseYLocal=e}getButtonByName(t){switch(t){case"up":return this.up;case"down":return this.down;case"left":return this.left;case"right":return this.right;case"bL":return this.bL;case"bR":return this.bR;case"start":return this.start;case"select":return this.select;case"primary":return this.primary;case"secondary":return this.secondary;case"tertiary":return this.tertiary;case"next":return this.next;case"previous":return this.previous;case"b1":return this.b1;case"b2":return this.b2;case"b3":return this.b3;case"b4":return this.b4;case"b5":return this.b5;case"b6":return this.b6;case"b7":return this.b7;case"b8":return this.b8;case"b9":return this.b9}}getMomentaryByName(t){switch(t){case"exit":return this.exit;case"back":return this.back;case"m1":return this.m1;case"m2":return this.m2;case"m3":return this.m3;case"m4":return this.m4;case"m5":return this.m5;case"m6":return this.m6;case"m7":return this.m7;case"m8":return this.m8;case"m9":return this.m9}}beforeFixedUpdate(t,e){this.mouseXLocalCache==this.mouseXLocal&&this.mouseYLocalCache==this.mouseYLocal||(this._setMouse(this.mouseXLocal,this.mouseYLocal),this.mouseXLocalCache=this.mouseXLocal,this.mouseYLocalCache=this.mouseYLocal)}afterFixedUpdate(t,e){this._rawMomentaries=0}destroy(t){this.robot.virtualInput=null,this.robot=null}};i([(0,u.default)("int"),r("design:type",Function),r("design:paramtypes",[Number]),r("design:returntype",void 0)],p.prototype,"_pressButton",null),i([(0,u.default)("int"),r("design:type",Function),r("design:paramtypes",[Number]),r("design:returntype",void 0)],p.prototype,"_releaseButton",null),i([(0,u.default)("int"),r("design:type",Function),r("design:paramtypes",[Number]),r("design:returntype",void 0)],p.prototype,"_pressMomentary",null),i([(0,u.default)("miliInt","miliInt"),r("design:type",Function),r("design:paramtypes",[Number,Number]),r("design:returntype",void 0)],p.prototype,"_setMouse",null),i([h.syncOnceInt,r("design:type",Number)],p.prototype,"_remoteRobotId",void 0),i([h.syncInt,r("design:type",Number)],p.prototype,"_rawButtons",void 0),i([h.syncInt,r("design:type",Number)],p.prototype,"_rawMomentaries",void 0),i([h.syncDeciInt,r("design:type",Number)],p.prototype,"mouseX",void 0),i([h.syncDeciInt,r("design:type",Number)],p.prototype,"mouseY",void 0),p=i([a.default,o.default,r("design:paramtypes",[])],p),e.default=p}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,