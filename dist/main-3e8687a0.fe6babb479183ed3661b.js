"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[8305],{3409:function(e,t,i){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.drawable3d=void 0;const s=r(i(657));t.drawable3d=function(e){return class extends e{constructor(...e){super(...e),this.canvas3dPlugin=this.gi.getPlugin(s.default),this._displayObjects3d=this._displayObjects3d||[],this.addDiscriminator("drawable-3d"),this.threeWorld=this.threeWorld??this.canvas3dPlugin.threeWorld,this.threeWorld.addChild(this)}initialize(){super.initialize();let e=this.isAny(["physical-2d","physical-3d"]);this.physicsTargetExtension=!!(this.physicsTargetExtension??(this.is("extension")&&!e&&this.target.isAny(["physical-2d","physical-3d"]))),this.disablePhysicsSync=this.disablePhysicsSync??(!e&&!this.physicsTargetExtension),this.disablePhysicsSync||this.syncWithPhysics()}addDisplayObject(e){this._displayObjects3d||(this._displayObjects3d=[]),this._displayObjects3d.push(e)}syncWithPhysics(){if(1==this._displayObjects3d.length){let e,t;this.physicsTargetExtension?(e=this.target.position,t=this.target.velocity):(e=this.position,t=this.velocity),this._displayObjects3d[0].position.set(e.x,e.y,e.z)}}drawUpdate(e,t,i){this.disablePhysicsSync||this.syncWithPhysics(),super.drawUpdate&&super.drawUpdate(e,t,i)}destroy(e){for(super.destroy&&super.destroy(e),this.threeWorld.removeChild(this);this._displayObjects3d.length>0;){let e=this._displayObjects3d.pop();this.threeWorld.disposeOfDisplayObject(e)}super.destroy&&super.destroy(e)}}}},9777:function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return s(t,e),t},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ThreeWorld=t.drawable3d=t.Canvas3dPlugin=t.Camera3d=t.AmbientLight=t.DirectionalLight=t.PointLight=t.Three=void 0;const a=n(i(2752));t.Three=a;var o=i(4443);Object.defineProperty(t,"PointLight",{enumerable:!0,get:function(){return h(o).default}});var l=i(809);Object.defineProperty(t,"DirectionalLight",{enumerable:!0,get:function(){return h(l).default}});var d=i(5424);Object.defineProperty(t,"AmbientLight",{enumerable:!0,get:function(){return h(d).default}});var c=i(6066);Object.defineProperty(t,"Camera3d",{enumerable:!0,get:function(){return h(c).default}});var u=i(657);Object.defineProperty(t,"Canvas3dPlugin",{enumerable:!0,get:function(){return h(u).default}});var f=i(3409);Object.defineProperty(t,"drawable3d",{enumerable:!0,get:function(){return f.drawable3d}});var p=i(8595);Object.defineProperty(t,"ThreeWorld",{enumerable:!0,get:function(){return h(p).default}})},5424:function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return s(t,e),t},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(5412),o=n(i(2752)),l=h(i(657));class d extends a.GameObject{constructor(){super(),this.canvas3dPlugin=this.gi.getPlugin(l.default),this.threeLight=this.threeLight??new o.AmbientLight(this.color,this.intensity),this.canvas3dPlugin.threeWorld.threeScene.add(this.threeLight)}updateLightProps(){(this.color||0===this.color)&&this.threeLight.color.set(this.color),this.threeLight.intensity=this.intensity??this.threeLight.intensity}destroy(e){this.canvas3dPlugin.threeWorld.threeScene.remove(this.threeLight)}}t.default=d},809:function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return s(t,e),t},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(5412),o=n(i(2752)),l=h(i(657));class d extends a.GameObject{constructor(){super(),this.canvas3dPlugin=this.gi.getPlugin(l.default),this.threeLight=this.threeLight??new o.DirectionalLight(this.color,this.intensity),this.canvas3dPlugin.threeWorld.threeScene.add(this.threeLight)}updateLightProps(){(this.color||0===this.color)&&this.threeLight.color.set(this.color),this.threeLight.intensity=this.intensity??this.threeLight.intensity}destroy(e){this.canvas3dPlugin.threeWorld.threeScene.remove(this.threeLight)}}t.default=d},4443:function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return s(t,e),t},h=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(5412),o=n(i(2752)),l=h(i(657));class d extends a.GameObject{constructor(){super(),this.canvas3dPlugin=this.gi.getPlugin(l.default),this.threeLight=this.threeLight??new o.PointLight(this.color,this.intensity,this.distance,this.decay),this.canvas3dPlugin.threeWorld.threeScene.add(this.threeLight)}updateLightProps(){(this.color||0===this.color)&&this.threeLight.color.set(this.color),this.threeLight.intensity=this.intensity??this.threeLight.intensity,this.threeLight.distance=this.distance??this.threeLight.distance,this.threeLight.decay=this.decay??this.threeLight.decay}destroy(e){this.canvas3dPlugin.threeWorld.threeScene.remove(this.threeLight)}}t.default=d},8595:function(e,t,i){var r=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var s=Object.getOwnPropertyDescriptor(t,i);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,s)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),s=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&r(t,e,i);return s(t,e),t};Object.defineProperty(t,"__esModule",{value:!0});const h=i(5412),a=n(i(2752));class o extends h.GameObject{constructor(){super(),this.visibleObjects={},this.aspectRatio=9/16,this.backgroundColor=this.backgroundColor??1380368,this.target=this.target??document.body,this.disableScroll=this.disableScroll??!0,this.disableScroll&&(this.target.style.overflow="hidden"),this.target?.offsetHeight||window.innerHeight,this.threeScene=new a.Scene,this.renderer=new a.WebGLRenderer({antialias:!0,alpha:!!this.alphaBg,logarithmicDepthBuffer:!0}),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=a.PCFSoftShadowMap,this.renderer.setClearColor(this.clearColor??0,0),this.canvas=this.renderer.domElement,this.target.appendChild(this.canvas)}drawUpdate(e,t,i){for(let r in this.visibleObjects){let s=this.visibleObjects[r];!s.disableDrawUpdate&&s.drawUpdate&&s.drawUpdate(e,t,i)}this.renderer.render(this.threeScene,this.activeCamera?.threeCam)}destroy(e){super.destroy(e);for(var t=this.threeScene.children.length-1;t>=0;t--){let e=this.threeScene.children[t];this.threeScene.remove(e),this.disposeOfDisplayObject(e)}this.threeScene=null,this.canvas.parentNode.removeChild(this.canvas),this.canvas=null}disposeOfDisplayObject(e){if(e instanceof a.Group)for(let t=0;t<e.children.length;t++)this.disposeOfDisplayObject(e.children[t]);else e instanceof a.Mesh?e.geometry&&this.disposeOfDisplayObject(e.geometry):e instanceof a.BufferGeometry&&e.dispose()}addChild(e){this.visibleObjects[e.id]=e;for(let t=0;t<e._displayObjects3d.length;t++){let i=e._displayObjects3d[t];i.parent||this.threeScene.add(i)}}removeChild(e){for(let t=0;t<e._displayObjects3d.length;t++)e._displayObjects3d[t].parent.remove(e._displayObjects3d[t]);delete this.visibleObjects[e.id]}resize(){this.renderer.setSize(this.target?.offsetWidth??window.innerWidth,this.target?.offsetHeight??window.innerHeight)}}t.default=o}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,