"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[6203],{2062:function(t,e,i){var s=this&&this.__decorate||function(t,e,i,s){var a,r=arguments.length,o=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,i,s);else for(var h=t.length-1;h>=0;h--)(a=t[h])&&(o=(r<3?a(o):r>3?a(e,i,o):a(e,i))||o);return r>3&&o&&Object.defineProperty(e,i,o),o},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});const r=i(9777),o=i(5412);let h=class extends o.GameObject{constructor(){super(),this.hidden=!1;const t=new r.Three.TorusGeometry(24,16,16,16);this.mat=new r.Three.MeshPhysicalMaterial({wireframe:!0,color:3359880,transparent:!0});const e=new r.Three.Mesh(t,this.mat);this.torus=e,this.addDisplayObject(this.torus),this.mat.opacity=0,e.rotation.y=Math.PI/2,this.torus.position.set(0,-24,-10)}drawUpdate(t){this.torus.rotation.x+=.1*t;let e=Math.pow(2,2*-t);this.hidden?this.mat.opacity*=e:this.mat.opacity=1-(1-this.mat.opacity)*e}hide(){this.hidden=!0}show(){this.hidden=!1}};h=s([r.drawable3d,a("design:paramtypes",[])],h),e.default=h},3428:function(t,e,i){var s=this&&this.__decorate||function(t,e,i,s){var a,r=arguments.length,o=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,i,s);else for(var h=t.length-1;h>=0;h--)(a=t[h])&&(o=(r<3?a(o):r>3?a(e,i,o):a(e,i))||o);return r>3&&o&&Object.defineProperty(e,i,o),o},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});const r=i(9777),o=i(5412);let h=class extends o.GameObject{constructor(){super();let t=new r.Three.SphereGeometry(.5,12,12),e=new r.Three.CylinderGeometry(.25,.5,1,12,1),i=new r.Three.MeshToonMaterial({color:"white"==this.color?14540253:2233621}),s=new r.Three.Mesh(t,i),a=new r.Three.Mesh(e,i),o=new r.Three.Mesh(e,i);s.position.y=.75,s.scale.x=s.scale.y=s.scale.z=.5,a.scale.x=a.scale.z=.5,o.scale.y=.25,o.scale.x=o.scale.z=.75,o.position.y=-.25;let h=new r.Three.Group;h.add(s),h.add(a),h.add(o),this.startTile.box.add(h),h.position.y=.5}fixedUpdate(){this.startTile.alive||this.gi.destroyObject(this,o.DeathType.Unloaded)}};h=s([r.drawable3d,a("design:paramtypes",[])],h),e.default=h},5408:function(t,e,i){var s=this&&this.__decorate||function(t,e,i,s){var a,r=arguments.length,o=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,i,s);else for(var h=t.length-1;h>=0;h--)(a=t[h])&&(o=(r<3?a(o):r>3?a(e,i,o):a(e,i))||o);return r>3&&o&&Object.defineProperty(e,i,o),o},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)};Object.defineProperty(e,"__esModule",{value:!0});const r=i(9777),o=i(5412);let h=class extends o.GameObject{constructor(){super(),this.xStartVariance=10*o.Util.normal(),this.yStartVariance=5*o.Util.normal()-10,this.zStartVariance=10*o.Util.normal()-30,this.vanquishMode=!1,this.dropSpeed=.03+.04*Math.random(),this.rateBase=1.5+Math.random(),this.red=51,this.green=34,this.blue=136,this.targetRed=51,this.targetGreen=34,this.targetBlue=136+Math.round(100*Math.random()),this.targetRed=this.red="white"==this.color?255:15,this.targetGreen=this.green="white"==this.color?255:10,this.targetBlue=this.blue="white"==this.color?255:10;const t=new r.Three.BoxGeometry(1,.5,1),e=new r.Three.MeshToonMaterial({color:256*this.red*256+256*this.green+this.blue,transparent:!0});this.mat=e,this.mat.opacity=0;const i=new r.Three.Mesh(t,e);this.box=i,this.addDisplayObject(this.box),this.box.position.set(this.xStartVariance+this.x,-6+this.yStartVariance,this.zStartVariance+this.z)}drawUpdate(t){this.box.position.x-=this.xStartVariance,this.box.position.y-=this.yStartVariance,this.box.position.z-=this.zStartVariance,this.vanquishMode&&(this.box.position.y-=t*this.dropSpeed-.01*(this.box.position.y+6));let e=Math.pow(this.rateBase,-t);if(this.mat.opacity=1-(1-this.mat.opacity)*e,this.xStartVariance*=e,this.yStartVariance*=e,this.zStartVariance*=e,this.box.position.x+=this.xStartVariance,this.box.position.y+=this.yStartVariance,this.box.position.z+=this.zStartVariance,this.red<this.targetRed&&(this.red+=Math.min(100*t,1)),this.red>this.targetRed&&(this.red-=Math.min(100*t,1)),this.green<this.targetGreen&&(this.green+=Math.min(100*t,1)),this.green>this.targetGreen&&(this.green-=Math.min(100*t,1)),this.blue<this.targetBlue&&(this.blue+=Math.min(100*t,1)),this.blue>this.targetBlue&&(this.blue-=Math.min(100*t,1)),Math.random()<.001*t/.016){let t="white"==this.color?Math.round(170+85*Math.random()):Math.round(34*Math.random());this.targetRed=this.targetGreen=this.targetBlue=t}this.mat.color.setHex(256*Math.floor(this.red)*256+256*Math.floor(this.green)+Math.floor(this.blue))}fixedUpdate(){this.vanquishMode&&this.box.position.y<-50&&this.gi.destroyObject(this,o.DeathType.Expired)}vanquish(t=!1){this.vanquishMode=!0,t&&(this.dropSpeed=5*this.dropSpeed+.1)}};h=s([r.drawable3d,a("design:paramtypes",[])],h),e.default=h},168:function(t,e,i){var s=this&&this.__decorate||function(t,e,i,s){var a,r=arguments.length,o=r<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(t,e,i,s);else for(var h=t.length-1;h>=0;h--)(a=t[h])&&(o=(r<3?a(o):r>3?a(e,i,o):a(e,i))||o);return r>3&&o&&Object.defineProperty(e,i,o),o},a=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},r=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const o=i(9777),h=i(5412),n=r(i(3428)),l=r(i(5408));let c=class extends h.GameObject{constructor(){super(),this.lCursor=0,this.allTiles={},this.tileRowQueue=[],this.active=!1,this.rowTimer=0,this.mainGroup=new o.Three.Group,this.mainGroup.name="Tile Grid",this.addDisplayObject(this.mainGroup),this.createRow()}drawUpdate(t,e,i){this.stopped||(this.mainGroup.position.z+=t,this.mainGroup.position.z>1.8*this.lCursor&&this.createRow())}createRow(){let t=[];for(let e=0;e<20;e++){let i=this.gi.make(l.default,(t=>{t.x=1.1*(e-10),t.z=1.8*-this.lCursor-35,t.color=(e+this.lCursor)%2?"white":"black"}));Math.random()<.1&&this.gi.make(n.default,(t=>{t.color=Math.random()<.5?"white":"black",t.startTile=i})),t.push(i),this.mainGroup.add(i.box)}if(this.tileRowQueue.unshift(t),this.tileRowQueue.length>10){let t=this.tileRowQueue.pop();for(let e=0;e<t.length;e++)t[e].vanquish()}this.lCursor++}vanquishAll(){for(;this.tileRowQueue.length>0;){let t=this.tileRowQueue.pop();for(let e=0;e<t.length;e++)t[e].vanquish(!0)}}stop(){this.stopped=!0}resume(){this.stopped=!1}};c=s([o.drawable3d,a("design:paramtypes",[])],c),e.default=c},9446:function(t,e,i){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(i(9427)),r=s(i(2062)),o=s(i(168));class h extends a.default{enter(){this.tileGrid?(this.tileGrid.resume(),this.torus.show()):(this.tileGrid=this.gi.make(o.default),this.torus=this.gi.make(r.default))}leave(){this.tileGrid.vanquishAll(),this.tileGrid.stop(),this.torus.hide()}}e.default=h}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,