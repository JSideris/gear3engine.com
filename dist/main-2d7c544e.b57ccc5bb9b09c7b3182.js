"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[8637],{8420:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e){this.isTeamGame=!1,this.gameInstance=e,this.scoreboard={sortOrder:[],columns:[{key:"id",hidden:1},{key:"tint",hidden:1,default:-1},{key:"anon",hidden:1,default:1},{key:"ai",hidden:1,default:0},{key:"name",title:"Player",default:""}],rows:{}}}initialize(){}cleanup(){}grab(e,t){}enteredZone(e,t){}exitedZone(e,t){}playerAdded(e){let t={id:e.id,name:e.username};for(let e=0;e<this.scoreboard.columns.length;e++){let i=this.scoreboard.columns[e];t[i.key]=t[i.key]??i.default??null}this.scoreboard.rows[e.id]=t}playerRemoved(e){delete this.scoreboard.rows[e.id]}tick(e){}updateScore(e,t,i){let r=this.scoreboard.rows[e];r&&void 0!==r[t]&&(r[t]=i)}getPublicMarkers(){}}},8540:function(e,t,i){var r=this&&this.__decorate||function(e,t,i,r){var s,a=arguments.length,o=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,r);else for(var n=e.length-1;n>=0;n--)(s=e[n])&&(o=(a<3?s(o):a>3?s(t,i,o):s(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=i(3133),o=i(1327),n=s(i(2136)),l=s(i(8989)),d=s(i(2600));let u=class extends n.default{constructor(){super(...arguments),this.position=new d.default,this.ttl=1/0}get targetId(){return this.target.id}set targetId(e){this.target=this.gi.allGameObjectsById[e]}setup(){this.colorNumb=14}fixedUpdate(e){this.ttl-=e,this.owner&&!this.owner.alive||!1===this.target.alive||this.ttl<=0?this.gi.destroyObject(this,l.default.Expired):this.position.setToVector(this.target.position)}};u=r([a.ownable,o.teamable],u),t.default=u},169:function(e,t,i){var r=this&&this.__decorate||function(e,t,i,r){var s,a=arguments.length,o=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,i):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,i,r);else for(var n=e.length-1;n>=0;n--)(s=e[n])&&(o=(a<3?s(o):a>3?s(t,i,o):s(t,i))||o);return a>3&&o&&Object.defineProperty(t,i,o),o},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=i(3133),n=i(1327),l=a(i(2136));let d=class extends l.default{constructor(){super(),this.x=0,this.y=0,this.r=0,this.variableRadius=!1}get nextSpawnPosition(){let e=this.x,t=this.y,i=this.variableRadius?Math.random()*this.r:this.r;if(0==i)return{x:e,y:t};let r=Math.random()*Math.PI*2;return{x:e+Math.cos(r)*i,y:t+Math.sin(r)*i}}};d=r([n.teamable,o.ownable,s("design:paramtypes",[])],d),t.default=d},2273:function(e,t,i){var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=r(i(2136));class a extends s.default{}t.default=a},1327:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.teamable=void 0,t.teamable=function(e){return class extends e{get teamId(){return this.team?.id}set teamId(e){this.team=this.gi.teams[e]}constructor(...e){super(...e),this.addDiscriminator("teamable")}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi0yZDdjNTQ0ZS41YjYwMTFlMGEwMGE0ZDAzNTE2NC5qcyIsIm1hcHBpbmdzIjoid0hBQ0FBLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBOEN0REQsRUFBQSxRQTdDQSxNQUNJRSxZQUFZQyxHQUNSQyxLQUFLQyxZQUFhLEVBQ2xCRCxLQUFLRCxhQUFlQSxFQUNwQkMsS0FBS0UsV0FBYSxDQUNkQyxVQUFXLEdBQ1hDLFFBQVMsQ0FDTCxDQUFFQyxJQUFLLEtBQU1DLE9BQVEsR0FDckIsQ0FBRUQsSUFBSyxPQUFRQyxPQUFRLEVBQUdDLFNBQVUsR0FDcEMsQ0FBRUYsSUFBSyxPQUFRQyxPQUFRLEVBQUdDLFFBQVMsR0FDbkMsQ0FBRUYsSUFBSyxLQUFNQyxPQUFRLEVBQUdDLFFBQVMsR0FDakMsQ0FBRUYsSUFBSyxPQUFRRyxNQUFPLFNBQVVELFFBQVMsS0FFN0NFLEtBQU0sQ0FBQyxFQUVmLENBQ0FDLGFBQWUsQ0FDZkMsVUFBWSxDQUNaQyxLQUFLQyxFQUFTQyxHQUFXLENBQ3pCQyxZQUFZQyxFQUFPQyxHQUFRLENBQzNCQyxXQUFXRixFQUFPQyxHQUFRLENBQzFCRSxZQUFZQyxHQUNSLElBQUlDLEVBQUksQ0FDSkMsR0FBSUYsRUFBT0UsR0FDWEMsS0FBTUgsRUFBT0ksVUFFakIsSUFBSyxJQUFJQyxFQUFJLEVBQUdBLEVBQUl6QixLQUFLRSxXQUFXRSxRQUFRc0IsT0FBUUQsSUFBSyxDQUNyRCxJQUFJRSxFQUFJM0IsS0FBS0UsV0FBV0UsUUFBUXFCLEdBQ2hDSixFQUFFTSxFQUFFdEIsS0FBT2dCLEVBQUVNLEVBQUV0QixNQUFRc0IsRUFBRXBCLFNBQVcsSUFDeEMsQ0FDQVAsS0FBS0UsV0FBV08sS0FBS1csRUFBT0UsSUFBTUQsQ0FDdEMsQ0FDQU8sY0FBY1IsVUFDSHBCLEtBQUtFLFdBQVdPLEtBQUtXLEVBQU9FLEdBQ3ZDLENBQ0FPLEtBQUtDLEdBQU8sQ0FDWkMsWUFBWUMsRUFBTzNCLEVBQUs0QixHQUNwQixJQUFJQyxFQUFN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Q2xCLElBQUkvQixFQUFtQjlDLE1BQVFBLEtBQUs4QyxpQkFBb0IsU0FBVUMsR0FDOUQsT0FBUUEsR0FBT0EsRUFBSUMsV0FBY0QsRUFBTSxDQUFFLFFBQVdBLEVBQ3hELEVBQ0FyRCxPQUFPQyxlQUFlQyxFQUFTLGFBQWMsQ0FBRUMsT0FBTyxJQUN0RCxNQUFNc0QsRUFBZ0JMLEVBQWdCLEVBQVEsT0FDOUMsTUFBTTBDLFVBQWFyQyxFQUFjNUMsU0FFakNYLEVBQUEsUUFBa0I0RixDLGVDUGxCOUYsT0FBT0MsZUFBZUMsRUFBUyxhQUFjLENBQUVDLE9BQU8sSUFDdERELEVBQVE2RSxjQUFXLEVBV25CN0UsRUFBUTZFLFNBVlIsU0FBa0IzRSxHQUNkLE9BQU8sY0FBY0EsRUFDYjJGLGFBQVcsT0FBT3pGLEtBQUswRixNQUFNcEUsRUFBSSxDQUNqQ21FLFdBQU83QixHQUFLNUQsS0FBSzBGLEtBQU8xRixLQUFLNkQsR0FBRzhCLE1BQU0vQixFQUFJLENBQzlDOUQsZUFBZThGLEdBQ1hyQyxTQUFTcUMsR0FDVDVGLEtBQUs2RixpQkFBaUIsV0FDMUIsRUFFUixDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2VhcjNlbmdpbmUtd2Vic2l0ZS8uLi8uLi9HQU1FUy1TSU1VTEFUT1JTLUZVTi9nZWFyM2VuZ2luZS9wbHVnaW5zL2dlYXIzZW5naW5lL2J1aWxkL2dhbWUtcnVsZXMvZ2FtZS1tb2RlLmpzIiwid2VicGFjazovL2dlYXIzZW5naW5lLXdlYnNpdGUvLi4vLi4vR0FNRVMtU0lNVUxBVE9SUy1GVU4vZ2VhcjNlbmdpbmUvcGx1Z2lucy9nZWFyM2VuZ2luZS9idWlsZC9nYW1lLXJ1bGVzL21hcC1tYXJrZXIuanMiLCJ3ZWJwYWNrOi8vZ2VhcjNlbmdpbmUtd2Vic2l0ZS8uLi8uLi9HQU1FUy1TSU1VTEFUT1JTLUZVTi9nZWFyM2VuZ2luZS9wbHVnaW5zL2dlYXIzZW5naW5lL2J1aWxkL2dhbWUtcnVsZXMvc3Bhd24tcG9pbnQuanMiLCJ3ZWJwYWNrOi8vZ2VhcjNlbmdpbmUtd2Vic2l0ZS8uLi8uLi9HQU1FUy1TSU1VTEFUT1JTLUZVTi9nZWFyM2VuZ2luZS9wbHVnaW5zL2dlYXIzZW5naW5lL2J1aWxkL2dhbWUtcnVsZXMvdGVhbS5qcyIsIndlYnBhY2s6Ly9nZWFyM2VuZ2luZS13ZWJzaXRlLy4uLy4uL0dBTUVTLVNJTVVMQVRPUlMtRlVOL2dlYXIzZW5naW5lL3BsdWdpbnMvZ2VhcjNlbmdpbmUvYnVpbGQvZ2FtZS1ydWxlcy90ZWFtYWJsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jbGFzcyBHYW1lTW9kZSB7XHJcbiAgICBjb25zdHJ1Y3RvcihnYW1lSW5zdGFuY2UpIHtcclxuICAgICAgICB0aGlzLmlzVGVhbUdhbWUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmdhbWVJbnN0YW5jZSA9IGdhbWVJbnN0YW5jZTtcclxuICAgICAgICB0aGlzLnNjb3JlYm9hcmQgPSB7XHJcbiAgICAgICAgICAgIHNvcnRPcmRlcjogW10sXHJcbiAgICAgICAgICAgIGNvbHVtbnM6IFtcclxuICAgICAgICAgICAgICAgIHsga2V5OiBcImlkXCIsIGhpZGRlbjogMSB9LFxyXG4gICAgICAgICAgICAgICAgeyBrZXk6IFwidGludFwiLCBoaWRkZW46IDEsIGRlZmF1bHQ6IC0xIH0sXHJcbiAgICAgICAgICAgICAgICB7IGtleTogXCJhbm9uXCIsIGhpZGRlbjogMSwgZGVmYXVsdDogMSB9LFxyXG4gICAgICAgICAgICAgICAgeyBrZXk6IFwiYWlcIiwgaGlkZGVuOiAxLCBkZWZhdWx0OiAwIH0sXHJcbiAgICAgICAgICAgICAgICB7IGtleTogXCJuYW1lXCIsIHRpdGxlOiBcIlBsYXllclwiLCBkZWZhdWx0OiBcIlwiIH0sXHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIHJvd3M6IHt9LFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICBpbml0aWFsaXplKCkgeyB9XHJcbiAgICBjbGVhbnVwKCkgeyB9XHJcbiAgICBncmFiKGdyYWJiZXIsIGdyYWJiZWQpIHsgfVxyXG4gICAgZW50ZXJlZFpvbmUocm9ib3QsIHpvbmUpIHsgfVxyXG4gICAgZXhpdGVkWm9uZShyb2JvdCwgem9uZSkgeyB9XHJcbiAgICBwbGF5ZXJBZGRlZChwbGF5ZXIpIHtcclxuICAgICAgICBsZXQgciA9IHtcclxuICAgICAgICAgICAgaWQ6IHBsYXllci5pZCxcclxuICAgICAgICAgICAgbmFtZTogcGxheWVyLnVzZXJuYW1lLFxyXG4gICAgICAgIH07XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNjb3JlYm9hcmQuY29sdW1ucy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgYyA9IHRoaXMuc2NvcmVib2FyZC5jb2x1bW5zW2ldO1xyXG4gICAgICAgICAgICByW2Mua2V5XSA9IHJbYy5rZXldID8/IGMuZGVmYXVsdCA/PyBudWxsO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNjb3JlYm9hcmQucm93c1twbGF5ZXIuaWRdID0gcjtcclxuICAgIH1cclxuICAgIHBsYXllclJlbW92ZWQocGxheWVyKSB7XHJcbiAgICAgICAgZGVsZXRlIHRoaXMuc2NvcmVib2FyZC5yb3dzW3BsYXllci5pZF07XHJcbiAgICB9XHJcbiAgICB0aWNrKGR0cykgeyB9XHJcbiAgICB1cGRhdGVTY29yZShyb3dJZCwga2V5LCBuZXdWYWx1ZSkge1xyXG4gICAgICAgIGxldCByb3cgPSB0aGlzLnNjb3JlYm9hcmQucm93c1tyb3dJZF07XHJcbiAgICAgICAgaWYgKCFyb3cgfHwgcm93W2tleV0gPT09IHVuZGVmaW5lZClcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIHJvd1trZXldID0gbmV3VmFsdWU7XHJcbiAgICB9XHJcbiAgICBnZXRQdWJsaWNNYXJrZXJzKCkge1xyXG4gICAgfVxyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IEdhbWVNb2RlO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nYW1lLW1vZGUuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcclxuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XHJcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xyXG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcclxuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XHJcbn07XHJcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3Qgb3duYWJsZV8xID0gcmVxdWlyZShcIi4uL2NvbnRyb2xsYWJpbGl0eS9vd25hYmxlXCIpO1xyXG5jb25zdCB0ZWFtYWJsZV8xID0gcmVxdWlyZShcIi4vdGVhbWFibGVcIik7XHJcbmNvbnN0IGdhbWVfb2JqZWN0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2NvcmUvZ2FtZS1vYmplY3RcIikpO1xyXG5jb25zdCBkZWF0aF90eXBlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL2VudGl0aWVzL2xpZmUvZGVhdGgtdHlwZVwiKSk7XHJcbmNvbnN0IHZlY3Rvcl8zXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4uL3V0aWwvdmVjdG9yLTNcIikpO1xyXG5sZXQgTWFwTWFya2VyID0gY2xhc3MgTWFwTWFya2VyIGV4dGVuZHMgZ2FtZV9vYmplY3RfMS5kZWZhdWx0IHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XHJcbiAgICAgICAgdGhpcy5wb3NpdGlvbiA9IG5ldyB2ZWN0b3JfM18xLmRlZmF1bHQoKTtcclxuICAgICAgICB0aGlzLnR0bCA9IEluZmluaXR5O1xyXG4gICAgfVxyXG4gICAgZ2V0IHRhcmdldElkKCkgeyByZXR1cm4gdGhpcy50YXJnZXQuaWQ7IH1cclxuICAgIDtcclxuICAgIHNldCB0YXJnZXRJZCh2KSB7IHRoaXMudGFyZ2V0ID0gdGhpcy5naS5hbGxHYW1lT2JqZWN0c0J5SWRbdl07IH1cclxuICAgIDtcclxuICAgIHNldHVwKCkge1xyXG4gICAgICAgIHRoaXMuY29sb3JOdW1iID0gMGIxMTEwO1xyXG4gICAgfVxyXG4gICAgZml4ZWRVcGRhdGUoZHQpIHtcclxuICAgICAgICB0aGlzLnR0bCAtPSBkdDtcclxuICAgICAgICBpZiAoKHRoaXMub3duZXIgJiYgIXRoaXMub3duZXIuYWxpdmUpIHx8IHRoaXMudGFyZ2V0LmFsaXZlID09PSBmYWxzZSB8fCB0aGlzLnR0bCA8PSAwKVxyXG4gICAgICAgICAgICB0aGlzLmdpLmRlc3Ryb3lPYmplY3QodGhpcywgZGVhdGhfdHlwZV8xLmRlZmF1bHQuRXhwaXJlZCk7XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb24uc2V0VG9WZWN0b3IodGhpcy50YXJnZXQucG9zaXRpb24pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufTtcclxuTWFwTWFya2VyID0gX19kZWNvcmF0ZShbXHJcbiAgICBvd25hYmxlXzEub3duYWJsZSxcclxuICAgIHRlYW1hYmxlXzEudGVhbWFibGVcclxuXSwgTWFwTWFya2VyKTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gTWFwTWFya2VyO1xyXG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYXAtbWFya2VyLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xyXG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XHJcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xyXG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcclxuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XHJcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xyXG59O1xyXG52YXIgX19tZXRhZGF0YSA9ICh0aGlzICYmIHRoaXMuX19tZXRhZGF0YSkgfHwgZnVuY3Rpb24gKGssIHYpIHtcclxuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5tZXRhZGF0YSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gUmVmbGVjdC5tZXRhZGF0YShrLCB2KTtcclxufTtcclxudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XHJcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcclxufTtcclxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xyXG5jb25zdCBvd25hYmxlXzEgPSByZXF1aXJlKFwiLi4vY29udHJvbGxhYmlsaXR5L293bmFibGVcIik7XHJcbmNvbnN0IHRlYW1hYmxlXzEgPSByZXF1aXJlKFwiLi90ZWFtYWJsZVwiKTtcclxuY29uc3QgZ2FtZV9vYmplY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vY29yZS9nYW1lLW9iamVjdFwiKSk7XHJcbmxldCBTcGF3blBvaW50ID0gY2xhc3MgU3Bhd25Qb2ludCBleHRlbmRzIGdhbWVfb2JqZWN0XzEuZGVmYXVsdCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMueCA9IDA7XHJcbiAgICAgICAgdGhpcy55ID0gMDtcclxuICAgICAgICB0aGlzLnIgPSAwO1xyXG4gICAgICAgIHRoaXMudmFyaWFibGVSYWRpdXMgPSBmYWxzZTtcclxuICAgIH1cclxuICAgIGdldCBuZXh0U3Bhd25Qb3NpdGlvbigpIHtcclxuICAgICAgICBsZXQgeCA9IHRoaXMueDtcclxuICAgICAgICBsZXQgeSA9IHRoaXMueTtcclxuICAgICAgICBsZXQgciA9IHRoaXMudmFyaWFibGVSYWRpdXMgPyBNYXRoLnJhbmRvbSgpICogdGhpcy5yIDogdGhpcy5yO1xyXG4gICAgICAgIGlmIChyID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHsgeDogeCwgeTogeSB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgYSA9IE1hdGgucmFuZG9tKCkgKiBNYXRoLlBJICogMjtcclxuICAgICAgICBsZXQgYyA9IE1hdGguY29zKGEpO1xyXG4gICAgICAgIGxldCBzID0gTWF0aC5zaW4oYSk7XHJcbiAgICAgICAgcmV0dXJuIHsgeDogeCArIGMgKiByLCB5OiB5ICsgcyAqIHIgfTtcclxuICAgIH1cclxufTtcclxuU3Bhd25Qb2ludCA9IF9fZGVjb3JhdGUoW1xyXG4gICAgdGVhbWFibGVfMS50ZWFtYWJsZSxcclxuICAgIG93bmFibGVfMS5vd25hYmxlLFxyXG4gICAgX19tZXRhZGF0YShcImRlc2lnbjpwYXJhbXR5cGVzXCIsIFtdKVxyXG5dLCBTcGF3blBvaW50KTtcclxuZXhwb3J0cy5kZWZhdWx0ID0gU3Bhd25Qb2ludDtcclxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Bhd24tcG9pbnQuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XHJcbn07XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuY29uc3QgZ2FtZV9vYmplY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vY29yZS9nYW1lLW9iamVjdFwiKSk7XHJcbmNsYXNzIFRlYW0gZXh0ZW5kcyBnYW1lX29iamVjdF8xLmRlZmF1bHQge1xyXG59XHJcbmV4cG9ydHMuZGVmYXVsdCA9IFRlYW07XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRlYW0uanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxuZXhwb3J0cy50ZWFtYWJsZSA9IHZvaWQgMDtcclxuZnVuY3Rpb24gdGVhbWFibGUoY29uc3RydWN0b3IpIHtcclxuICAgIHJldHVybiBjbGFzcyBleHRlbmRzIGNvbnN0cnVjdG9yIHtcclxuICAgICAgICBnZXQgdGVhbUlkKCkgeyByZXR1cm4gdGhpcy50ZWFtPy5pZDsgfVxyXG4gICAgICAgIHNldCB0ZWFtSWQodikgeyB0aGlzLnRlYW0gPSB0aGlzLmdpLnRlYW1zW3ZdOyB9XHJcbiAgICAgICAgY29uc3RydWN0b3IoLi4uYXJncykge1xyXG4gICAgICAgICAgICBzdXBlciguLi5hcmdzKTtcclxuICAgICAgICAgICAgdGhpcy5hZGREaXNjcmltaW5hdG9yKFwidGVhbWFibGVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufVxyXG5leHBvcnRzLnRlYW1hYmxlID0gdGVhbWFibGU7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRlYW1hYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImNvbnN0cnVjdG9yIiwiZ2FtZUluc3RhbmNlIiwidGhpcyIsImlzVGVhbUdhbWUiLCJzY29yZWJvYXJkIiwic29ydE9yZGVyIiwiY29sdW1ucyIsImtleSIsImhpZGRlbiIsImRlZmF1bHQiLCJ0aXRsZSIsInJvd3MiLCJpbml0aWFsaXplIiwiY2xlYW51cCIsImdyYWIiLCJncmFiYmVyIiwiZ3JhYmJlZCIsImVudGVyZWRab25lIiwicm9ib3QiLCJ6b25lIiwiZXhpdGVkWm9uZSIsInBsYXllckFkZGVkIiwicGxheWVyIiwiciIsImlkIiwibmFtZSIsInVzZXJuYW1lIiwiaSIsImxlbmd0aCIsImMiLCJwbGF5ZXJSZW1vdmVkIiwidGljayIsImR0cyIsInVwZGF0ZVNjb3JlIiwicm93SWQiLCJuZXdWYWx1ZSIsInJvdyIsInVuZGVmaW5lZCIsImdldFB1YmxpY01hcmtlcnMiLCJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImRlc2MiLCJkIiwiYXJndW1lbnRzIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwiX19pbXBvcnREZWZhdWx0IiwibW9kIiwiX19lc01vZHVsZSIsIm93bmFibGVfMSIsInRlYW1hYmxlXzEiLCJnYW1lX29iamVjdF8xIiwiZGVhdGhfdHlwZV8xIiwidmVjdG9yXzNfMSIsIk1hcE1hcmtlciIsInN1cGVyIiwicG9zaXRpb24iLCJ0dGwiLCJJbmZpbml0eSIsInRhcmdldElkIiwidiIsImdpIiwiYWxsR2FtZU9iamVjdHNCeUlkIiwic2V0dXAiLCJjb2xvck51bWIiLCJmaXhlZFVwZGF0ZSIsImR0Iiwib3duZXIiLCJhbGl2ZSIsImRlc3Ryb3lPYmplY3QiLCJFeHBpcmVkIiwic2V0VG9WZWN0b3IiLCJvd25hYmxlIiwidGVhbWFibGUiLCJfX21ldGFkYXRhIiwiayIsIm1ldGFkYXRhIiwiU3Bhd25Qb2ludCIsIngiLCJ5IiwidmFyaWFibGVSYWRpdXMiLCJuZXh0U3Bhd25Qb3NpdGlvbiIsIk1hdGgiLCJyYW5kb20iLCJhIiwiUEkiLCJjb3MiLCJzaW4iLCJUZWFtIiwidGVhbUlkIiwidGVhbSIsInRlYW1zIiwiYXJncyIsImFkZERpc2NyaW1pbmF0b3IiXSwic291cmNlUm9vdCI6IiJ9