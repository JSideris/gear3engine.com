"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[5214],{8521:function(t,i,e){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(i,"__esModule",{value:!0}),i.drawable2d=void 0;const r=e(5412),a=s(e(2716));i.drawable2d=function(t){return class extends t{constructor(...t){super(...t),this.canvas2dPlugin=this.gi.getPlugin(a.default),this.addDiscriminator("drawable-2d"),this.pixiWorld=this.pixiWorld??this.canvas2dPlugin.pixiWorld,this.drawPosition=this.drawPosition??new r.Vector3,this.drawVelocity=this.drawVelocity??new r.Vector3,this.pixiWorld.addChild(this)}initialize(){super.initialize();let t=this.isAny(["physical-2d","physical-3d"]);this.physicsTargetExtension=!!(this.physicsTargetExtension??(this.is("extension")&&!t&&this.target.isAny(["physical-2d","physical-3d"]))),this.disablePhysicsSync=this.disablePhysicsSync??(!t&&!this.physicsTargetExtension),this.disablePhysicsSync||this.syncWithPhysics(),this._updateDrawObjectPosition(this.canvas2dPlugin.lastKnownPhysicsUpdate)}syncWithPhysics(){let t,i;this.physicsTargetExtension?(t=this.target.position,i=this.target.velocity):(t=this.position,i=this.velocity),this.drawPosition.setToVector(t.multiply(r.Util.pPerM)),this.drawVelocity.setToVector(i.multiply(r.Util.pPerM))}_updateDrawObjectPosition(t){let i=t-this.canvas2dPlugin.lastKnownPhysicsUpdate;i>.5&&(i=0),this.displayObject&&this.displayObject.position.set(this.drawPosition.x+i*this.drawVelocity.x,this.drawPosition.y+i*this.drawVelocity.y)}drawUpdate(t,i,e){this.disablePhysicsSync||this.syncWithPhysics(),this._updateDrawObjectPosition(i),super.drawUpdate&&super.drawUpdate(t,i,e)}setDrawPosition(t,i){this.drawPosition.setToVector(t),i&&this.drawVelocity.setToVector(i),this.displayObject&&this.displayObject.position.set(this.drawPosition.x,this.drawPosition.y)}destroy(t){this.pixiWorld.removeChild(this),this.displayObject&&(this.displayObject.destroy(),this.displayObject=null),super.destroy&&super.destroy(t)}}}},7203:function(t,i,e){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(i,"__esModule",{value:!0}),i.Canvas2dPlugin=i.drawable2d=i.visualEffect2d=i.Backdrop2d=i.PixiWorld=i.Cursor2d=i.Camera2d=i.Pixi=void 0;var r=e(9493);Object.defineProperty(i,"Pixi",{enumerable:!0,get:function(){return s(r).default}});var a=e(8616);Object.defineProperty(i,"Camera2d",{enumerable:!0,get:function(){return s(a).default}});var n=e(6408);Object.defineProperty(i,"Cursor2d",{enumerable:!0,get:function(){return s(n).default}});var d=e(8334);Object.defineProperty(i,"PixiWorld",{enumerable:!0,get:function(){return s(d).default}});var o=e(3208);Object.defineProperty(i,"Backdrop2d",{enumerable:!0,get:function(){return s(o).default}});var l=e(9521);Object.defineProperty(i,"visualEffect2d",{enumerable:!0,get:function(){return l.visualEffect2d}});var c=e(8521);Object.defineProperty(i,"drawable2d",{enumerable:!0,get:function(){return c.drawable2d}});var h=e(2716);Object.defineProperty(i,"Canvas2dPlugin",{enumerable:!0,get:function(){return s(h).default}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,