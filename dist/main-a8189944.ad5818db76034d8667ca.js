"use strict";(self.webpackChunkgear3engine_website=self.webpackChunkgear3engine_website||[]).push([[642],{2170:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0});let s=1;e.default=class{constructor(){this.objects={},this.controllers={},this.id=s++}add(t){this.objects[t.id]=t,t._group=this;for(let e in this.controllers)this.controllers[e].loadObject(t)}remove(t){delete this.objects[t.id];for(let e in this.controllers)this.controllers[e].unloadObject(t);t._group==this&&(t._group=null)}watch(t){if(!this.controllers[t.id]){this.controllers[t.id]=t;for(let e in this.objects){let s=this.objects[e];t.loadObject(s)}}}unwatch(t){delete this.controllers[t.id];for(let e in this.objects){let s=this.objects[e];t.unloadObject(s)}}shouldStillWatch(t){for(let e in this.objects)if(this.objects[e],t.loadedObjects[e].c>1)return!1;return!0}reset(){for(let t in this.objects){let e=this.objects[t];this.remove(e)}}}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi1hODE4OTk0NC40ODFlYzMxY2E4NjU5MmM4YzRjZi5qcyIsIm1hcHBpbmdzIjoidUhBQ0FBLE9BQU9DLGVBQWVDLEVBQVMsYUFBYyxDQUFFQyxPQUFPLElBQ3RELElBQUlDLEVBQU0sRUF3RFZGLEVBQUEsUUF2REEsTUFDSUcsY0FDSUMsS0FBS0MsUUFBVSxDQUFDLEVBQ2hCRCxLQUFLRSxZQUFjLENBQUMsRUFDcEJGLEtBQUtHLEdBQUtMLEdBQ2QsQ0FDQU0sSUFBSUMsR0FDQUwsS0FBS0MsUUFBUUksRUFBT0YsSUFBTUUsRUFDMUJBLEVBQU9DLE9BQVNOLEtBQ2hCLElBQUssSUFBSU8sS0FBS1AsS0FBS0UsWUFDUEYsS0FBS0UsWUFBWUssR0FDdkJDLFdBQVdILEVBRXJCLENBQ0FJLE9BQU9KLFVBQ0lMLEtBQUtDLFFBQVFJLEVBQU9GLElBQzNCLElBQUssSUFBSUksS0FBS1AsS0FBS0UsWUFDUEYsS0FBS0UsWUFBWUssR0FDdkJHLGFBQWFMLEdBRWZBLEVBQU9DLFFBQVVOLE9BQ2pCSyxFQUFPQyxPQUFTLEtBQ3hCLENBQ0FLLE1BQU1DLEdBQ0YsSUFBSVosS0FBS0UsWUFBWVUsRUFBV1QsSUFBaEMsQ0FHQUgsS0FBS0UsWUFBWVUsRUFBV1QsSUFBTVMsRUFDbEMsSUFBSyxJQUFJQyxLQUFLYixLQUFLQyxRQUFTLENBQ3hCLElBQUlhLEVBQUlkLEtBQUtDLFFBQVFZLEdBQ3JCRCxFQUFXSixXQUFXTSxFQUMxQixDQUxBLENBTUosQ0FDQUMsUUFBUUgsVUFDR1osS0FBS0UsWUFBWVUsRUFBV1QsSUFDbkMsSUFBSyxJQUFJVSxLQUFLYixLQUFLQyxRQUFTLENBQ3hCLElBQUlhLEVBQUlkLEtBQUtDLFFBQVFZLEdBQ3JCRCxFQUFXRixhQUFhSSxFQUM1QixDQUNKLENBQ0FFLGlCQUFpQkosR0FDYixJQUFLLElBQUlDLEtBQUtiLEtBQUtDLFFBRWYsR0FEUUQsS0FBS0MsUUFBUVksR0FDakJELEVBQVdLLGNBQWNKLEdBQUdOLEVBQUksRUFDaEMsT0FBTyxFQUVmLE9BQU8sQ0FDWCxDQUNBVyxRQUNJLElBQUssSUFBSUwsS0FBS2IsS0FBS0MsUUFBUyxDQUN4QixJQUFJYSxFQUFJZCxLQUFLQyxRQUFRWSxHQUNyQmIsS0FBS1MsT0FBT0ssRUFDaEIsQ0FDSixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2VhcjNlbmdpbmUtd2Vic2l0ZS8uLi8uLi9HQU1FUy1TSU1VTEFUT1JTLUZVTi9nZWFyM2VuZ2luZS9wbHVnaW5zL2dlYXIzZW5naW5lL2J1aWxkL2NvbS9vYmplY3QtZ3JvdXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcclxubGV0IGdJZCA9IDE7XHJcbmNsYXNzIE9iamVjdEdyb3VwIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMub2JqZWN0cyA9IHt9O1xyXG4gICAgICAgIHRoaXMuY29udHJvbGxlcnMgPSB7fTtcclxuICAgICAgICB0aGlzLmlkID0gZ0lkKys7XHJcbiAgICB9XHJcbiAgICBhZGQob2JqZWN0KSB7XHJcbiAgICAgICAgdGhpcy5vYmplY3RzW29iamVjdC5pZF0gPSBvYmplY3Q7XHJcbiAgICAgICAgb2JqZWN0Ll9ncm91cCA9IHRoaXM7XHJcbiAgICAgICAgZm9yIChsZXQgYyBpbiB0aGlzLmNvbnRyb2xsZXJzKSB7XHJcbiAgICAgICAgICAgIGxldCBDID0gdGhpcy5jb250cm9sbGVyc1tjXTtcclxuICAgICAgICAgICAgQy5sb2FkT2JqZWN0KG9iamVjdCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmVtb3ZlKG9iamVjdCkge1xyXG4gICAgICAgIGRlbGV0ZSB0aGlzLm9iamVjdHNbb2JqZWN0LmlkXTtcclxuICAgICAgICBmb3IgKGxldCBjIGluIHRoaXMuY29udHJvbGxlcnMpIHtcclxuICAgICAgICAgICAgbGV0IEMgPSB0aGlzLmNvbnRyb2xsZXJzW2NdO1xyXG4gICAgICAgICAgICBDLnVubG9hZE9iamVjdChvYmplY3QpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob2JqZWN0Ll9ncm91cCA9PSB0aGlzKVxyXG4gICAgICAgICAgICBvYmplY3QuX2dyb3VwID0gbnVsbDtcclxuICAgIH1cclxuICAgIHdhdGNoKGNvbnRyb2xsZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5jb250cm9sbGVyc1tjb250cm9sbGVyLmlkXSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29udHJvbGxlcnNbY29udHJvbGxlci5pZF0gPSBjb250cm9sbGVyO1xyXG4gICAgICAgIGZvciAobGV0IG8gaW4gdGhpcy5vYmplY3RzKSB7XHJcbiAgICAgICAgICAgIGxldCBPID0gdGhpcy5vYmplY3RzW29dO1xyXG4gICAgICAgICAgICBjb250cm9sbGVyLmxvYWRPYmplY3QoTyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgdW53YXRjaChjb250cm9sbGVyKSB7XHJcbiAgICAgICAgZGVsZXRlIHRoaXMuY29udHJvbGxlcnNbY29udHJvbGxlci5pZF07XHJcbiAgICAgICAgZm9yIChsZXQgbyBpbiB0aGlzLm9iamVjdHMpIHtcclxuICAgICAgICAgICAgbGV0IE8gPSB0aGlzLm9iamVjdHNbb107XHJcbiAgICAgICAgICAgIGNvbnRyb2xsZXIudW5sb2FkT2JqZWN0KE8pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNob3VsZFN0aWxsV2F0Y2goY29udHJvbGxlcikge1xyXG4gICAgICAgIGZvciAobGV0IG8gaW4gdGhpcy5vYmplY3RzKSB7XHJcbiAgICAgICAgICAgIGxldCBPID0gdGhpcy5vYmplY3RzW29dO1xyXG4gICAgICAgICAgICBpZiAoY29udHJvbGxlci5sb2FkZWRPYmplY3RzW29dLmMgPiAxKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIH1cclxuICAgIHJlc2V0KCkge1xyXG4gICAgICAgIGZvciAobGV0IG8gaW4gdGhpcy5vYmplY3RzKSB7XHJcbiAgICAgICAgICAgIGxldCBPID0gdGhpcy5vYmplY3RzW29dO1xyXG4gICAgICAgICAgICB0aGlzLnJlbW92ZShPKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuZXhwb3J0cy5kZWZhdWx0ID0gT2JqZWN0R3JvdXA7XHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdC1ncm91cC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnSWQiLCJjb25zdHJ1Y3RvciIsInRoaXMiLCJvYmplY3RzIiwiY29udHJvbGxlcnMiLCJpZCIsImFkZCIsIm9iamVjdCIsIl9ncm91cCIsImMiLCJsb2FkT2JqZWN0IiwicmVtb3ZlIiwidW5sb2FkT2JqZWN0Iiwid2F0Y2giLCJjb250cm9sbGVyIiwibyIsIk8iLCJ1bndhdGNoIiwic2hvdWxkU3RpbGxXYXRjaCIsImxvYWRlZE9iamVjdHMiLCJyZXNldCJdLCJzb3VyY2VSb290IjoiIn0=